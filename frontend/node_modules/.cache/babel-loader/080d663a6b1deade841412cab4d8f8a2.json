{"ast":null,"code":"var _jsxFileName = \"/Users/razefron/Desktop/projects/top_ten/frontend/src/components/admin/business/newBusiness.jsx\";\nimport React, { useState } from \"react\";\n\nconst Business = props => {\n  debugger;\n  let [businessState, setBusinessState] = useState(() => ({\n    id: \"\",\n    displayNameHebrew: \"\",\n    displayNameEnglish: \"\",\n    descriptionHebrew: \"\",\n    descriptionEnglish: \"\",\n    visible: true\n  }));\n\n  function update(field) {\n    debugger;\n    return e => {\n      if (e.target.type === \"checkbox\") {\n        setBusinessState(prev => ({ ...prev,\n          [field]: !!e.target.checked\n        }));\n      } else {\n        setBusinessState(prev => ({ ...prev,\n          [field]: !!e.target.value\n        }));\n      }\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, this.props.formType), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"displayName hebrew\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"displayNameHebrew\",\n    value: this.state.displayNameHebrew,\n    onChange: this.update(\"displayNameHebrew\"),\n    placeholder: \"displayName Hebrew\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"displayName english\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"displayNameEnglish\",\n    value: this.state.displayNameEnglish,\n    onChange: this.update(\"displayNameEnglish\"),\n    placeholder: \"displayName Hebrew\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Description hewbrew\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"descriptionHebrew\",\n    value: this.state.descriptionHebrew,\n    onChange: this.update(\"descriptionHebrew\"),\n    placeholder: \"displayName English\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Description english\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"descriptionEnglish\",\n    value: this.state.descriptionEnglish,\n    onChange: this.update(\"descriptionEnglish\"),\n    placeholder: \"description Hebrew\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Visible\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: this.state.visible,\n    onChange: this.update(\"visible\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: this.sendForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, this.props.formType === \"New Business\" ? \"create the form\" : \"edit the form\"));\n};\n\nexport default Business;","map":{"version":3,"sources":["/Users/razefron/Desktop/projects/top_ten/frontend/src/components/admin/business/newBusiness.jsx"],"names":["React","useState","Business","props","businessState","setBusinessState","id","displayNameHebrew","displayNameEnglish","descriptionHebrew","descriptionEnglish","visible","update","field","e","target","type","prev","checked","value","formType","state","sendForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst Business = (props) => {\n    debugger\n\n    let [businessState, setBusinessState] = useState(() => ({\n      id: \"\",\n      displayNameHebrew: \"\",\n      displayNameEnglish: \"\",\n      descriptionHebrew: \"\",\n      descriptionEnglish: \"\",\n      visible: true,\n    }));\n\n    function update(field) {\n        debugger\n        return (e) => {\n            if (e.target.type === \"checkbox\") {\n                setBusinessState((prev) => ({ ...prev, [field]: !!e.target.checked }))\n            } else {\n                setBusinessState((prev) => ({ ...prev, [field]: !!e.target.value }))\n            }\n        }\n    }\n\n    return (\n      <form>\n        <h2>{this.props.formType}</h2>\n        <label>\n          displayName hebrew\n          <input\n            type=\"text\"\n            id=\"displayNameHebrew\"\n            value={this.state.displayNameHebrew}\n            onChange={this.update(\"displayNameHebrew\")}\n            placeholder=\"displayName Hebrew\"\n          />\n        </label>\n        <label>\n          displayName english\n          <input\n            type=\"text\"\n            id=\"displayNameEnglish\"\n            value={this.state.displayNameEnglish}\n            onChange={this.update(\"displayNameEnglish\")}\n            placeholder=\"displayName Hebrew\"\n          />\n        </label>\n        <label>\n          Description hewbrew\n          <input\n            type=\"text\"\n            id=\"descriptionHebrew\"\n            value={this.state.descriptionHebrew}\n            onChange={this.update(\"descriptionHebrew\")}\n            placeholder=\"displayName English\"\n          />\n        </label>\n        <label>\n          Description english\n          <input\n            type=\"text\"\n            id=\"descriptionEnglish\"\n            value={this.state.descriptionEnglish}\n            onChange={this.update(\"descriptionEnglish\")}\n            placeholder=\"description Hebrew\"\n          />\n        </label>\n        <label>\n          Visible\n          <input\n            type=\"checkbox\"\n            checked={this.state.visible}\n            onChange={this.update(\"visible\")}\n          />\n        </label>\n        <button onClick={this.sendForm}>\n          {this.props.formType === \"New Business\"\n            ? \"create the form\"\n            : \"edit the form\"}\n        </button>\n      </form>\n    );\n}\n\nexport default Business;\n"]},"metadata":{},"sourceType":"module"}