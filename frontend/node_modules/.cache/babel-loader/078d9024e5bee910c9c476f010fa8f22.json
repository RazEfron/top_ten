{"ast":null,"code":"import * as APIUtil from \"../util/business_api_util\";\nexport const RECEIVE_ALL_BUSINESSES = \"RECEIVE_ALL_BUSINESSES\";\nexport const RECEIVE_BUSINESSES_TITLES = \"RECEIVE_BUSINESSES_TITLES\";\nexport const RECEIVE_BUSINESSES_ERRORS = \"RECEIVE_BUSINESSES_ERRORS\";\nexport const receiveAllBusinesses = businesses => ({\n  type: RECEIVE_ALL_BUSINESSES,\n  businesses\n});\nexport const receiveAllBusinessesTitles = title => ({\n  type: RECEIVE_BUSINESSES_TITLES,\n  title\n});\nexport const receiveErrors = errors => ({\n  type: RECEIVE_BUSINESSES_ERRORS,\n  errors\n});\nexport const fetchBusinesses = () => dispatch => {\n  debugger;\n  APIUtil.getAllBusinesses().then(businesses => {\n    dispatch(receiveAllBusinesses(businesses));\n  }).catch(err => {\n    dispatch(receiveErrors(err));\n  });\n};\nexport const fetchBusinessesTitles = () => dispatch => {\n  debugger;\n  APIUtil.getAllBusinesses().then(titles => {\n    dispatch(receiveAllBusinessesTitles(titles));\n  }).catch(err => {\n    dispatch(receiveErrors(err));\n  });\n};","map":{"version":3,"sources":["/Users/razefron/Desktop/projects/top_ten/frontend/src/actions/business_actions.js"],"names":["APIUtil","RECEIVE_ALL_BUSINESSES","RECEIVE_BUSINESSES_TITLES","RECEIVE_BUSINESSES_ERRORS","receiveAllBusinesses","businesses","type","receiveAllBusinessesTitles","title","receiveErrors","errors","fetchBusinesses","dispatch","getAllBusinesses","then","catch","err","fetchBusinessesTitles","titles"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,2BAAzB;AAEA,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AAEP,OAAO,MAAMC,oBAAoB,GAAIC,UAAD,KAAiB;AACnDC,EAAAA,IAAI,EAAEL,sBAD6C;AAEnDI,EAAAA;AAFmD,CAAjB,CAA7B;AAKP,OAAO,MAAME,0BAA0B,GAAIC,KAAD,KAAY;AACpDF,EAAAA,IAAI,EAAEJ,yBAD8C;AAEpDM,EAAAA;AAFoD,CAAZ,CAAnC;AAKP,OAAO,MAAMC,aAAa,GAAIC,MAAD,KAAa;AACxCJ,EAAAA,IAAI,EAAEH,yBADkC;AAExCO,EAAAA;AAFwC,CAAb,CAAtB;AAKP,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAD,IAAc;AACjD;AACAZ,EAAAA,OAAO,CAACa,gBAAR,GACGC,IADH,CACST,UAAD,IAAgB;AACpBO,IAAAA,QAAQ,CAACR,oBAAoB,CAACC,UAAD,CAArB,CAAR;AACD,GAHH,EAIGU,KAJH,CAIUC,GAAD,IAAS;AACdJ,IAAAA,QAAQ,CAACH,aAAa,CAACO,GAAD,CAAd,CAAR;AACD,GANH;AAOD,CATM;AAWP,OAAO,MAAMC,qBAAqB,GAAG,MAAOL,QAAD,IAAc;AACvD;AACAZ,EAAAA,OAAO,CAACa,gBAAR,GACGC,IADH,CACSI,MAAD,IAAY;AAChBN,IAAAA,QAAQ,CAACL,0BAA0B,CAACW,MAAD,CAA3B,CAAR;AACD,GAHH,EAIGH,KAJH,CAIUC,GAAD,IAAS;AACdJ,IAAAA,QAAQ,CAACH,aAAa,CAACO,GAAD,CAAd,CAAR;AACD,GANH;AAOD,CATM","sourcesContent":["import * as APIUtil from \"../util/business_api_util\";\n\nexport const RECEIVE_ALL_BUSINESSES = \"RECEIVE_ALL_BUSINESSES\";\nexport const RECEIVE_BUSINESSES_TITLES = \"RECEIVE_BUSINESSES_TITLES\";\nexport const RECEIVE_BUSINESSES_ERRORS = \"RECEIVE_BUSINESSES_ERRORS\";\n\nexport const receiveAllBusinesses = (businesses) => ({\n  type: RECEIVE_ALL_BUSINESSES,\n  businesses,\n});\n\nexport const receiveAllBusinessesTitles = (title) => ({\n  type: RECEIVE_BUSINESSES_TITLES,\n  title,\n});\n\nexport const receiveErrors = (errors) => ({\n  type: RECEIVE_BUSINESSES_ERRORS,\n  errors\n})\n\nexport const fetchBusinesses = () => (dispatch) => {\n  debugger\n  APIUtil.getAllBusinesses()\n    .then((businesses) => {\n      dispatch(receiveAllBusinesses(businesses));\n    })\n    .catch((err) => {\n      dispatch(receiveErrors(err));\n    });\n};\n\nexport const fetchBusinessesTitles = () => (dispatch) => {\n  debugger\n  APIUtil.getAllBusinesses()\n    .then((titles) => {\n      dispatch(receiveAllBusinessesTitles(titles));\n    })\n    .catch((err) => {\n      dispatch(receiveErrors(err));\n    });\n};"]},"metadata":{},"sourceType":"module"}