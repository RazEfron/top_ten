{"ast":null,"code":"var _jsxFileName = \"/Users/razefron/Desktop/projects/top_ten/frontend/src/components/admin/business/business_form.jsx\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass BusinessForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      displayNameHebrew: '',\n      displayNameEnglish: '',\n      descriptionHebrew: '',\n      descriptionEnglish: '',\n      visible: true\n    };\n    this.update = this.update.bind(this);\n    this.sendForm = this.sendForm.bind(this);\n  }\n\n  componentDidUpdate() {\n    debugger;\n\n    if (this.props.business.id && this.props.business.id !== this.state.id) {\n      this.setState(this.props.business);\n    }\n  }\n\n  titlesArray() {\n    const {\n      businesses\n    } = this.state;\n    let ids = Object.keys(businesses);\n    let array = [];\n\n    if (ids.length > 0) {\n      for (let i = 0; i < ids.length; i++) {\n        const id = ids[i];\n        const business = businesses[id];\n        array.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: id,\n          id: id,\n          onClick: this.chooseEdit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }, \"Edit \", business.displayName.hebrew));\n      }\n    }\n\n    return array;\n  }\n\n  update(field) {\n    debugger;\n    return e => {\n      if (e.target.type === \"checkbox\") {\n        this.setState({\n          [field]: !!e.target.checked\n        });\n      } else {\n        this.setState({\n          [field]: e.target.value\n        });\n      }\n    };\n  }\n\n  sendForm() {\n    debugger;\n    const {\n      displayNameHebrew,\n      displayNameEnglish,\n      descriptionHebrew,\n      descriptionEnglish,\n      visible\n    } = this.state;\n    let business = {\n      displayName: {\n        hebrew: displayNameHebrew,\n        english: displayNameEnglish\n      },\n      description: {\n        hebrew: descriptionHebrew,\n        english: descriptionEnglish\n      },\n      visible\n    };\n    debugger;\n    this.props.create(business);\n  }\n\n  render() {\n    debugger;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, this.props.formType), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"displayName hebrew\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"displayNameHebrew\",\n      value: this.state.displayNameHebrew,\n      onChange: this.update('displayNameHebrew'),\n      placeholder: \"displayName Hebrew\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"displayName english\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"displayNameEnglish\",\n      value: this.state.displayNameEnglish,\n      onChange: this.update('displayNameEnglish'),\n      placeholder: \"displayName Hebrew\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Description hewbrew\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"descriptionHebrew\",\n      value: this.state.descriptionHebrew,\n      onChange: this.update('descriptionHebrew'),\n      placeholder: \"displayName English\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Description english\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"descriptionEnglish\",\n      value: this.state.descriptionEnglish,\n      onChange: this.update('descriptionEnglish'),\n      placeholder: \"description Hebrew\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"Visible\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.visible,\n      onChange: this.update('visible'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sendForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"Create New Business\"));\n  }\n\n}\n\nexport default withRouter(BusinessForm);","map":{"version":3,"sources":["/Users/razefron/Desktop/projects/top_ten/frontend/src/components/admin/business/business_form.jsx"],"names":["React","withRouter","BusinessForm","Component","constructor","props","state","id","displayNameHebrew","displayNameEnglish","descriptionHebrew","descriptionEnglish","visible","update","bind","sendForm","componentDidUpdate","business","setState","titlesArray","businesses","ids","Object","keys","array","length","i","push","chooseEdit","displayName","hebrew","field","e","target","type","checked","value","english","description","create","render","formType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass BusinessForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                id: '',\n                displayNameHebrew: '',\n                displayNameEnglish: '',\n                descriptionHebrew: '',\n                descriptionEnglish: '',\n                visible: true\n    };\n        this.update = this.update.bind(this);\n        this.sendForm = this.sendForm.bind(this);\n}\n\n    componentDidUpdate() {\n        debugger\n        if (this.props.business.id && this.props.business.id !== this.state.id) {\n            this.setState(this.props.business);\n        }\n    }\n\n    titlesArray() {\n        const { businesses } = this.state;\n        let ids = Object.keys(businesses);\n        let array = [];\n        if (ids.length > 0) {\n            for (let i = 0; i < ids.length; i++) {\n                const id = ids[i];\n                const business = businesses[id];\n                array.push(\n                    <li key={id} id={id} onClick={this.chooseEdit}>\n                        Edit {business.displayName.hebrew}\n                    </li>\n                )\n\n            }\n        }\n        return array;\n    }\n\n    update(field) {\n        debugger\n        return (e) => {\n            if (e.target.type === \"checkbox\") {\n                this.setState({ [field]: !!e.target.checked })\n            } else {\n                this.setState({ [field]: e.target.value })\n            }\n        }\n    }\n\n    sendForm() {\n        debugger\n        const { displayNameHebrew, displayNameEnglish, descriptionHebrew, descriptionEnglish, visible} = this.state\n        let business = {\n            displayName: {\n                hebrew: displayNameHebrew,\n                english: displayNameEnglish\n            },\n            description: {\n                hebrew: descriptionHebrew,\n                english: descriptionEnglish\n            },\n            visible\n        }\n        debugger\n        this.props.create(business)\n    }\n\n    render() {\n        debugger\n            return (\n                <form>\n                    <h2>{this.props.formType}</h2>\n                    <label>displayName hebrew\n                        <input\n                            type=\"text\"\n                            id=\"displayNameHebrew\"\n                            value={this.state.displayNameHebrew}\n                            onChange={this.update('displayNameHebrew')}\n                            placeholder=\"displayName Hebrew\"\n                        />\n                    </label>\n                    <label>displayName english\n                        <input\n                            type=\"text\"\n                            id=\"displayNameEnglish\"\n                            value={this.state.displayNameEnglish}\n                            onChange={this.update('displayNameEnglish')}\n                            placeholder=\"displayName Hebrew\"\n                        />\n                    </label>\n                    <label>Description hewbrew\n                        <input\n                            type=\"text\"\n                            id=\"descriptionHebrew\"\n                            value={this.state.descriptionHebrew}\n                            onChange={this.update('descriptionHebrew')}\n                            placeholder=\"displayName English\"\n                        />\n                    </label>\n                    <label>\n                        Description english\n                        <input\n                            type=\"text\"\n                            id=\"descriptionEnglish\"\n                            value={this.state.descriptionEnglish}\n                            onChange={this.update('descriptionEnglish')}\n                            placeholder=\"description Hebrew\"\n                        />\n                    </label>\n                    <label>\n                        Visible\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.visible}\n                            onChange={this.update('visible')}\n                        />\n                    </label>\n                    <button onClick={this.sendForm}>Create New Business</button>\n                </form>\n\n            )\n    }\n}\n\nexport default withRouter(BusinessForm);\n"]},"metadata":{},"sourceType":"module"}