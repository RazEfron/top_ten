{"ast":null,"code":"import { RECEIVE_ALL_BUSINESSES, RECEIVE_BUSINESS, REMOVE_BUSINESS } from \"../../actions/business_actions\";\nexport default function (state = {}, action) {\n  let newState;\n\n  switch (action.type) {\n    case RECEIVE_ALL_BUSINESSES:\n      debugger;\n      let businessesObject = {};\n      action.businesses.data.forEach(business => {\n        const {\n          description,\n          displayName,\n          visible,\n          _id\n        } = business;\n        businessesObject[_id] = {\n          description: {\n            id: description._id,\n            hebrew: description.hebrew,\n            english: description.english\n          },\n          displayName: {\n            id: displayName._id,\n            hebrew: displayName.hebrew,\n            english: displayName.english\n          },\n          visible\n        };\n      });\n      newState = Object.assign({}, state, businessesObject);\n      return newState;\n\n    case RECEIVE_BUSINESS:\n      debugger;\n      const {\n        description,\n        displayName,\n        visible,\n        _id\n      } = action.business.data;\n      let business = {\n        [_id]: {\n          description: {\n            id: description._id,\n            hebrew: description.hebrew,\n            english: description.english\n          },\n          displayName: {\n            id: displayName._id,\n            hebrew: displayName.hebrew,\n            english: displayName.english\n          },\n          visible\n        }\n      };\n      newState = Object.assign({}, state, business);\n      return newState;\n\n    case REMOVE_BUSINESS:\n      newState = Object.assign({}, state);\n      delete newState[action.businessId];\n      return newState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/razefron/Desktop/projects/top_ten/frontend/src/reducers/entities/business_reducer.js"],"names":["RECEIVE_ALL_BUSINESSES","RECEIVE_BUSINESS","REMOVE_BUSINESS","state","action","newState","type","businessesObject","businesses","data","forEach","business","description","displayName","visible","_id","id","hebrew","english","Object","assign","businessId"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,gBAAjC,EAAmDC,eAAnD,QAA0E,gCAA1E;AAEA,eAAe,UAAUC,KAAK,GAAG,EAAlB,EAAsBC,MAAtB,EAA8B;AAC3C,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKN,sBAAL;AACE;AACA,UAAIO,gBAAgB,GAAG,EAAvB;AACAH,MAAAA,MAAM,CAACI,UAAP,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+BC,QAAQ,IAAI;AACzC,cAAM;AAAEC,UAAAA,WAAF;AAAeC,UAAAA,WAAf;AAA4BC,UAAAA,OAA5B;AAAqCC,UAAAA;AAArC,YAA6CJ,QAAnD;AACAJ,QAAAA,gBAAgB,CAACQ,GAAD,CAAhB,GAAwB;AACpBH,UAAAA,WAAW,EAAE;AACXI,YAAAA,EAAE,EAAEJ,WAAW,CAACG,GADL;AAEXE,YAAAA,MAAM,EAAEL,WAAW,CAACK,MAFT;AAGXC,YAAAA,OAAO,EAAEN,WAAW,CAACM;AAHV,WADO;AAMpBL,UAAAA,WAAW,EAAE;AACXG,YAAAA,EAAE,EAAEH,WAAW,CAACE,GADL;AAEXE,YAAAA,MAAM,EAAEJ,WAAW,CAACI,MAFT;AAGXC,YAAAA,OAAO,EAAEL,WAAW,CAACK;AAHV,WANO;AAWpBJ,UAAAA;AAXoB,SAAxB;AAaD,OAfD;AAgBAT,MAAAA,QAAQ,GAAGc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,KAAlB,EAAyBI,gBAAzB,CAAX;AACA,aAAOF,QAAP;;AACF,SAAKJ,gBAAL;AACE;AACA,YAAM;AAAEW,QAAAA,WAAF;AAAeC,QAAAA,WAAf;AAA4BC,QAAAA,OAA5B;AAAqCC,QAAAA;AAArC,UAA6CX,MAAM,CAACO,QAAP,CAAgBF,IAAnE;AACA,UAAIE,QAAQ,GAAG;AACb,SAACI,GAAD,GAAO;AACLH,UAAAA,WAAW,EAAE;AACXI,YAAAA,EAAE,EAAEJ,WAAW,CAACG,GADL;AAEXE,YAAAA,MAAM,EAAEL,WAAW,CAACK,MAFT;AAGXC,YAAAA,OAAO,EAAEN,WAAW,CAACM;AAHV,WADR;AAMLL,UAAAA,WAAW,EAAE;AACXG,YAAAA,EAAE,EAAEH,WAAW,CAACE,GADL;AAEXE,YAAAA,MAAM,EAAEJ,WAAW,CAACI,MAFT;AAGXC,YAAAA,OAAO,EAAEL,WAAW,CAACK;AAHV,WANR;AAWLJ,UAAAA;AAXK;AADM,OAAf;AAeAT,MAAAA,QAAQ,GAAGc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,KAAlB,EAAyBQ,QAAzB,CAAX;AACA,aAAON,QAAP;;AACF,SAAKH,eAAL;AACEG,MAAAA,QAAQ,GAAGc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,KAAlB,CAAX;AACA,aAAOE,QAAQ,CAACD,MAAM,CAACiB,UAAR,CAAf;AACA,aAAOhB,QAAP;;AACF;AACE,aAAOF,KAAP;AA/CJ;AAiDD","sourcesContent":["import { RECEIVE_ALL_BUSINESSES, RECEIVE_BUSINESS, REMOVE_BUSINESS } from \"../../actions/business_actions\"\n\nexport default function (state = {}, action) {\n  let newState\n  switch (action.type) {\n    case RECEIVE_ALL_BUSINESSES:\n      debugger\n      let businessesObject = {};\n      action.businesses.data.forEach(business => {\n        const { description, displayName, visible, _id } = business;\n        businessesObject[_id] = {\n            description: {\n              id: description._id,\n              hebrew: description.hebrew,\n              english: description.english,\n            },\n            displayName: {\n              id: displayName._id,\n              hebrew: displayName.hebrew,\n              english: displayName.english,\n            },\n            visible\n          }\n      })\n      newState = Object.assign({}, state, businessesObject);\n      return newState\n    case RECEIVE_BUSINESS:\n      debugger\n      const { description, displayName, visible, _id } = action.business.data;\n      let business = {\n        [_id]: {\n          description: {\n            id: description._id,\n            hebrew: description.hebrew,\n            english: description.english,\n          },\n          displayName: {\n            id: displayName._id,\n            hebrew: displayName.hebrew,\n            english: displayName.english,\n          },\n          visible\n        }\n      }\n      newState = Object.assign({}, state, business)\n      return newState\n    case REMOVE_BUSINESS:\n      newState = Object.assign({}, state);\n      delete newState[action.businessId]\n      return newState\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}