{"ast":null,"code":"var _jsxFileName = \"/Users/razefron/Desktop/projects/top_ten/frontend/src/components/admin/business.jsx\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Business extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: {},\n      editBusiness: {},\n      newBusiness: {}\n    };\n    this.chooseEdit = this.chooseEdit.bind(this);\n    this.titlesArray = this.titlesArray.bind(this);\n    this.createEditForm = this.createEditForm.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAll();\n  }\n\n  componentDidUpdate() {\n    debugger;\n\n    if (this.props.businesses !== this.state.businesses) {\n      this.setState({\n        businesses: this.props.businesses\n      });\n    }\n  }\n\n  chooseEdit(e) {\n    e.preventDefault();\n    debugger;\n    let id = [e.target.id];\n    let business = this.state.businesses[id];\n    let newBusiness = {\n      id,\n      displayNameHebrew: business.displayName.hebrew,\n      displayNameEnglish: business.displayName.english,\n      descriptionHebrew: business.description.hebrew,\n      descriptionEnglish: business.description.english,\n      visible: business.visible\n    };\n    this.setState({\n      editBusiness: newBusiness\n    });\n  }\n\n  titlesArray() {\n    const {\n      businesses\n    } = this.state;\n    let ids = Object.keys(businesses);\n    let array = [];\n\n    if (ids.length > 0) {\n      for (let i = 0; i < ids.length; i++) {\n        const id = ids[i];\n        const business = businesses[id];\n        array.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: id,\n          id: id,\n          onClick: this.chooseEdit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }, \"Edit \", business.displayName.hebrew));\n      }\n    }\n\n    return array;\n  }\n\n  createEditForm() {\n    debugger;\n\n    if (this.state.editBusiness.id) {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"displayNameHebrew\",\n        value: this.state.editBusiness.displayNameHebrew,\n        onChange: this.update('displayNameHebrew'),\n        placeholder: \"displayName Hebrew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"displayNameEnglish\",\n        value: this.state.editBusiness.displayNameEnglish,\n        onChange: this.update('displayNameEnglish'),\n        placeholder: \"displayName Hebrew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"descriptionHebrew\",\n        value: this.state.editBusiness.descriptionHebrew,\n        onChange: this.update('descriptionHebrew'),\n        placeholder: \"displayName English\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"descriptionEnglish\",\n        value: this.state.editBusiness.descriptionEnglish,\n        onChange: this.update('descriptionEnglish'),\n        placeholder: \"description Hebrew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.editBusiness.visible,\n        onChange: this.update('visible'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, \"Choose business to edit\");\n    }\n  }\n\n  update(field) {\n    return e => {\n      let newState;\n\n      if (e.target.type === \"checkbox\") {\n        newState = Object.assign({}, this.state.editBusiness, {\n          [field]: e.target.checked\n        });\n        this.setState({\n          editBusiness: newState\n        });\n      } else {\n        newState = Object.assign({}, this.state.editBusiness, {\n          [field]: e.target.value\n        });\n        this.setState({\n          editBusiness: newState\n        });\n      }\n    };\n  }\n\n  render() {\n    debugger;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Edit Businesses\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, this.titlesArray())), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, this.createEditForm()));\n  }\n\n}\n\nexport default withRouter(Business);","map":{"version":3,"sources":["/Users/razefron/Desktop/projects/top_ten/frontend/src/components/admin/business.jsx"],"names":["React","withRouter","Business","Component","constructor","props","state","businesses","editBusiness","newBusiness","chooseEdit","bind","titlesArray","createEditForm","update","componentDidMount","fetchAll","componentDidUpdate","setState","e","preventDefault","id","target","business","displayNameHebrew","displayName","hebrew","displayNameEnglish","english","descriptionHebrew","description","descriptionEnglish","visible","ids","Object","keys","array","length","i","push","field","newState","type","assign","checked","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Business extends React.Component {\n    constructor(props) {\n        super(props)\n\n      this.state = { \n        businesses: {} ,\n        editBusiness: {},\n        newBusiness: {}\n      };\n      \n      this.chooseEdit = this.chooseEdit.bind(this);\n      this.titlesArray = this.titlesArray.bind(this);\n      this.createEditForm = this.createEditForm.bind(this);\n      this.update = this.update.bind(this);\n    }\n\n    componentDidMount() {\n      this.props.fetchAll()\n    }\n    \n    componentDidUpdate() {\n      debugger\n      if (this.props.businesses !== this.state.businesses) {\n        this.setState({ businesses: this.props.businesses });\n      }\n    }\n\n    chooseEdit(e) {\n      e.preventDefault();\n      debugger\n      let id = [e.target.id]\n      let business = this.state.businesses[id]\n      let newBusiness = {\n        id,\n        displayNameHebrew: business.displayName.hebrew,\n        displayNameEnglish: business.displayName.english,\n        descriptionHebrew: business.description.hebrew,\n        descriptionEnglish: business.description.english,\n        visible: business.visible\n      }\n      this.setState({ editBusiness: newBusiness})\n    }\n\n    titlesArray() {\n      const { businesses } = this.state;\n      let ids = Object.keys(businesses);\n      let array = [];\n      if (ids.length > 0) {\n        for (let i = 0; i < ids.length; i++) {\n          const id = ids[i];\n          const business = businesses[id];\n          array.push(\n            <li key={id} id={id} onClick={this.chooseEdit}>\n              Edit {business.displayName.hebrew}\n            </li>\n          )\n          \n        }\n      }\n      return array;\n    }\n\n  createEditForm() {\n    debugger\n    if (this.state.editBusiness.id) {\n      return(\n        <form>\n          <input\n            type=\"text\"\n            id=\"displayNameHebrew\"\n            value={this.state.editBusiness.displayNameHebrew}\n            onChange={this.update('displayNameHebrew')}\n            placeholder=\"displayName Hebrew\"\n          />\n          <input\n            type=\"text\"\n            id=\"displayNameEnglish\"\n            value={this.state.editBusiness.displayNameEnglish}\n            onChange={this.update('displayNameEnglish')}\n            placeholder=\"displayName Hebrew\"\n          />\n          <input\n            type=\"text\"\n            id=\"descriptionHebrew\"\n            value={this.state.editBusiness.descriptionHebrew}\n            onChange={this.update('descriptionHebrew')}\n            placeholder=\"displayName English\"\n          />\n          <input\n            type=\"text\"\n            id=\"descriptionEnglish\"\n            value={this.state.editBusiness.descriptionEnglish}\n            onChange={this.update('descriptionEnglish')}\n            placeholder=\"description Hebrew\"\n          />\n          <input\n            type=\"checkbox\"\n            checked={this.state.editBusiness.visible}\n            onChange={this.update('visible')}\n          />\n        </form>\n\n      )\n    } else {\n      return(\n        <div>\n          Choose business to edit\n        </div>\n      )\n    }\n  }\n\n  update(field) {\n    return (e) => {\n      let newState\n      if (e.target.type === \"checkbox\") {\n        newState = Object.assign({}, this.state.editBusiness, { [field]: e.target.checked })\n        this.setState({ editBusiness: newState })\n      } else {\n        newState = Object.assign({}, this.state.editBusiness, { [field]: e.target.value })\n        this.setState({ editBusiness: newState })\n      }\n    }\n  }\n\n    render() {\n      debugger\n        return (\n          <div>\n            <div>\n              <span>Edit Businesses</span>\n            </div>\n            <div>\n              <ul>\n                {this.titlesArray()}\n              </ul>\n            </div>\n            <div>\n              {this.createEditForm()}\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default withRouter(Business);\n"]},"metadata":{},"sourceType":"module"}