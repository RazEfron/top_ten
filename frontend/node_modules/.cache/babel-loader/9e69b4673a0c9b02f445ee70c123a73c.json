{"ast":null,"code":"var _jsxFileName = \"/Users/razefron/Desktop/projects/top_ten/frontend/src/components/admin/business/business_form.jsx\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass BusinessForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      displayNameHebrew: '',\n      displayNameEnglish: '',\n      descriptionHebrew: '',\n      descriptionEnglish: '',\n      visible: ''\n    };\n    this.update = this.update.bind(this);\n  }\n\n  componentDidUpdate() {\n    debugger;\n\n    if (this.props.business.id && this.props.business.id !== this.state.id) {\n      this.setState(this.props.business);\n    }\n  }\n\n  titlesArray() {\n    const {\n      businesses\n    } = this.state;\n    let ids = Object.keys(businesses);\n    let array = [];\n\n    if (ids.length > 0) {\n      for (let i = 0; i < ids.length; i++) {\n        const id = ids[i];\n        const business = businesses[id];\n        array.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: id,\n          id: id,\n          onClick: this.chooseEdit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }, \"Edit \", business.displayName.hebrew));\n      }\n    }\n\n    return array;\n  }\n\n  update(field) {\n    debugger;\n    return e => {\n      let newState;\n\n      if (e.target.type === \"checkbox\") {\n        this.setState({\n          [field]: e.target.checked\n        });\n      } else {\n        this.setState({\n          [field]: e.target.value\n        });\n      }\n    };\n  }\n\n  render() {\n    debugger;\n\n    if (this.state.id) {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, \"displayName hebrew\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"displayNameHebrew\",\n        value: this.state.displayNameHebrew,\n        onChange: this.update('displayNameHebrew'),\n        placeholder: \"displayName Hebrew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, \"displayName english\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"displayNameEnglish\",\n        value: this.state.displayNameEnglish,\n        onChange: this.update('displayNameEnglish'),\n        placeholder: \"displayName Hebrew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, \"Description hewbrew\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"descriptionHebrew\",\n        value: this.state.descriptionHebrew,\n        onChange: this.update('descriptionHebrew'),\n        placeholder: \"displayName English\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, \"Description english\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"descriptionEnglish\",\n        value: this.state.descriptionEnglish,\n        onChange: this.update('descriptionEnglish'),\n        placeholder: \"description Hebrew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, \"Visible\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.visible,\n        onChange: this.update('visible'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, \"Choose business to edit\");\n    }\n  }\n\n}\n\nexport default withRouter(BusinessForm);","map":{"version":3,"sources":["/Users/razefron/Desktop/projects/top_ten/frontend/src/components/admin/business/business_form.jsx"],"names":["React","withRouter","BusinessForm","Component","constructor","props","state","id","displayNameHebrew","displayNameEnglish","descriptionHebrew","descriptionEnglish","visible","update","bind","componentDidUpdate","business","setState","titlesArray","businesses","ids","Object","keys","array","length","i","push","chooseEdit","displayName","hebrew","field","e","newState","target","type","checked","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass BusinessForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                id: '',\n                displayNameHebrew: '',\n                displayNameEnglish: '',\n                descriptionHebrew: '',\n                descriptionEnglish: '',\n                visible: ''\n    };\n        this.update = this.update.bind(this);\n}\n\n    componentDidUpdate() {\n        debugger\n        if (this.props.business.id && this.props.business.id !== this.state.id) {\n            this.setState(this.props.business);\n        }\n    }\n\n    titlesArray() {\n        const { businesses } = this.state;\n        let ids = Object.keys(businesses);\n        let array = [];\n        if (ids.length > 0) {\n            for (let i = 0; i < ids.length; i++) {\n                const id = ids[i];\n                const business = businesses[id];\n                array.push(\n                    <li key={id} id={id} onClick={this.chooseEdit}>\n                        Edit {business.displayName.hebrew}\n                    </li>\n                )\n\n            }\n        }\n        return array;\n    }\n\n    update(field) {\n        debugger\n        return (e) => {\n            let newState\n            if (e.target.type === \"checkbox\") {\n                this.setState({ [field]: e.target.checked })\n            } else {\n                this.setState({ [field]: e.target.value })\n            }\n        }\n    }\n\n    render() {\n        debugger\n        if (this.state.id) {\n            return (\n                <form>\n                    <label>displayName hebrew\n          <input\n                            type=\"text\"\n                            id=\"displayNameHebrew\"\n                            value={this.state.displayNameHebrew}\n                            onChange={this.update('displayNameHebrew')}\n                            placeholder=\"displayName Hebrew\"\n                        />\n                    </label>\n                    <label>displayName english\n          <input\n                            type=\"text\"\n                            id=\"displayNameEnglish\"\n                            value={this.state.displayNameEnglish}\n                            onChange={this.update('displayNameEnglish')}\n                            placeholder=\"displayName Hebrew\"\n                        />\n                    </label>\n                    <label>Description hewbrew\n          <input\n                            type=\"text\"\n                            id=\"descriptionHebrew\"\n                            value={this.state.descriptionHebrew}\n                            onChange={this.update('descriptionHebrew')}\n                            placeholder=\"displayName English\"\n                        />\n                    </label>\n                    <label>\n                        Description english\n          <input\n                            type=\"text\"\n                            id=\"descriptionEnglish\"\n                            value={this.state.descriptionEnglish}\n                            onChange={this.update('descriptionEnglish')}\n                            placeholder=\"description Hebrew\"\n                        />\n                    </label>\n                    <label>\n                        Visible\n          <input\n                            type=\"checkbox\"\n                            checked={this.state.visible}\n                            onChange={this.update('visible')}\n                        />\n                    </label>\n                </form>\n\n            )\n        } else {\n            return (\n                <div>\n                    Choose business to edit\n                </div>\n            )\n        }\n    }\n}\n\nexport default withRouter(BusinessForm);\n"]},"metadata":{},"sourceType":"module"}