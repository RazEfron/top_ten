{"ast":null,"code":"var _jsxFileName = \"/Users/razefron/Desktop/projects/top_ten/frontend/src/util/route_util.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\"; // Passed in from parent component or from mapStateToProps\n// const Auth = ({ component: Component, path, loggedIn, exact }) => (\n//   <Route\n//     path={path}\n//     exact={exact}\n//     render={(props) =>\n//       !loggedIn ? (\n//         <Component {...props} />\n//       ) : (\n//         // Redirect to the tweets page if the user is authenticated\n//         <Redirect to=\"/tweets\" />\n//       )\n//     }\n//   />\n// );\n\nconst Protected = ({\n  component: Component,\n  isAdmin,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAdmin ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })) :\n  /*#__PURE__*/\n  // Redirect to the login page if the user is already authenticated\n  React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n})); // Use the isAuthenitcated slice of state to determine whether a user is logged in\n\n\nconst mapStateToProps = state => ({\n  isAdmin: state.session.isAdmin\n}); // export const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));","map":{"version":3,"sources":["/Users/razefron/Desktop/projects/top_ten/frontend/src/util/route_util.js"],"names":["React","connect","Route","Redirect","withRouter","Protected","component","Component","isAdmin","rest","props","mapStateToProps","state","session","ProtectedRoute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,OAAxB;AAAiC,KAAGC;AAApC,CAAD,kBAChB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IACNF,OAAO,gBACL,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK;AAAA;AAGL;AACA,sBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,C,CAcA;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,OAAO,EAAEI,KAAK,CAACC,OAAN,CAAcL;AADW,CAAZ,CAAxB,C,CAIA;;;AAEA,OAAO,MAAMM,cAAc,GAAGV,UAAU,CAACH,OAAO,CAACU,eAAD,CAAP,CAAyBN,SAAzB,CAAD,CAAjC","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\n\n// Passed in from parent component or from mapStateToProps\n// const Auth = ({ component: Component, path, loggedIn, exact }) => (\n//   <Route\n//     path={path}\n//     exact={exact}\n//     render={(props) =>\n//       !loggedIn ? (\n//         <Component {...props} />\n//       ) : (\n//         // Redirect to the tweets page if the user is authenticated\n//         <Redirect to=\"/tweets\" />\n//       )\n//     }\n//   />\n// );\n\nconst Protected = ({ component: Component, isAdmin, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAdmin ? (\n        <Component {...props} />\n      ) : (\n        // Redirect to the login page if the user is already authenticated\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\n// Use the isAuthenitcated slice of state to determine whether a user is logged in\n\nconst mapStateToProps = (state) => ({\n  isAdmin: state.session.isAdmin,\n});\n\n// export const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));\n"]},"metadata":{},"sourceType":"module"}